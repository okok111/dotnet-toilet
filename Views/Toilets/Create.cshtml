@model ToiletApp.Models.Toilets
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Toilets</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Advise" class="control-label"></label>
                <input asp-for="Advise" class="form-control" />
                <span asp-validation-for="Advise" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Url" class="control-label"></label>
                <input asp-for="Url" class="form-control" />
                <span asp-validation-for="Url" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Lat" class="control-label"></label>
                <input asp-for="Lat" class="form-control" id="lat" />
                <span asp-validation-for="Lat" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Lng" class="control-label"></label>
                <input asp-for="Lng" class="form-control" id="lng" />
                <span asp-validation-for="Lng" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="AreasId" class="control-label"></label>
                <select asp-for="AreasId" class ="form-control" asp-items="ViewBag.AreasId"></select>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<h2>Map</h2>

<input id="address" type="text" placeholder="位置情報検索">
<input type="button" value="検索" onclick="codeAddress()">
<p>マーカーをドラック＆ドロップで位置の調整ができます。<p>
    <div id='map'></div>

    <style> 
        #map {
          height: 600px;
          width: 600px;
        }
    </style>

    
<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
        <script>
            //初期マップの設定
            let map
            let marker
            function initMap(){
              geocoder = new google.maps.Geocoder()

              map = new google.maps.Map(document.getElementById('map'), {
                center:  {lat: 35.6803997, lng:139.7690174},  //東京
                zoom: 15,

              });
            }

            //検索後のマップ作成
            let geocoder
            let aft
            function codeAddress(){
              let inputAddress = document.getElementById('address').value;
              geocoder.geocode( { 'address': inputAddress}, function(results, status) {
                if (status == 'OK') {
                    //マーカーが複数できないようにする
                    if (aft == true){
                        marker.setMap(null);
                    }

                    //新しくマーカーを作成する
                    map.setCenter(results[0].geometry.location);
                        marker = new google.maps.Marker({
                        map: map,
                        position: results[0].geometry.location,
                        draggable: true	// ドラッグ可能にする
                    });

                    //二度目以降か判断
                    aft = true

                    //検索した時に緯度経度を入力する
                    document.getElementById('lat').value = results[0].geometry.location.lat();
                    document.getElementById('lng').value = results[0].geometry.location.lng();

                    // マーカーのドロップ（ドラッグ終了）時のイベント
                    google.maps.event.addListener( marker, 'dragend', function(ev){
                        // イベントの引数evの、プロパティ.latLngが緯度経度
                        document.getElementById('lat').value = ev.latLng.lat();
                        document.getElementById('lng').value = ev.latLng.lng();
                    });
                } else {
                  alert('該当する結果がありませんでした：' + status);
                }
              });
            }

        </script>
        <script src="https://maps.googleapis.com/maps/api/js?key=@Configuration["GoogleMaps:ApiKey"]&callback=initMap" async defer></script>

}
